# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-admin/terraform:atlas - Builds the provider that interacts with resources, configuration, artifacts, and metadata managed by Atlas https://atlas.hashicorp.com
app-admin/terraform:aws - Builds the provider that interacts with the many resources supported by Amazon Web Services https://aws.amazon.com
app-admin/terraform:azure - Builds the provider that interacts with the many resources supported by Microsoft Azure https://azure.microsoft.com
app-admin/terraform:azurerm - Builds the provider is used to interact with the many resources supported by Azure, via the Azure Resource Manager API.
app-admin/terraform:chef - Builds the provisioner that invokes a Chef Client https://www.chef.io
app-admin/terraform:cloudflare - Builds the provider that interact with the DNS resources supported by CloudFlare https://www.cloudflare.com
app-admin/terraform:cloudstack - Builds the provider that interact with the many resources supported by Apache CloudStack https://cloudstack.apache.org
app-admin/terraform:consul - Builds the provider that exposes resources used to interact with a Consul cluster app-admin/consul
app-admin/terraform:digitalocean - Builds the provider that interacts with the resources supported by DigitalOcean https://www.digitalocean.com
app-admin/terraform:dme - Builds the provider that interacts with the resources supported by DNSMadeEasy http://www.dnsmadeeasy.com
app-admin/terraform:dnsimple - Builds the provider that interacts with the resources supported by DNSimple https://dnsimple.com
app-admin/terraform:docker - Builds the provider that interacts with Docker app-emulation/docker containers and images, by using Docker API
app-admin/terraform:dyn - Builds the provider that interacts with the resources supported by Dyn http://dyn.com
app-admin/terraform:file - Builds the provisioner that copies files or directories from the machine executing Terraform to the newly created resource
app-admin/terraform:fish-completion - Enable fish completion support
app-admin/terraform:google - Builds the provider that interacts with Google Cloud services https://cloud.google.com
app-admin/terraform:heroku - Builds the provider that interacts with the resources supported by Heroku https://www.heroku.com
app-admin/terraform:librato - Builds the provider that interacts with the resources supported by Librato Spaces https://www.librato.com
app-admin/terraform:local-exec - Builds the provisioner that invokes a local executable after a resource is created
app-admin/terraform:mailgun - Builds the provider that interacts with the resources supported by Mailgun http://www.mailgun.com
app-admin/terraform:null - Builds the provider that allows you to configure provisioners that are not directly associated with a single existing resource
app-admin/terraform:openstack - Builds the provider that interacts with the many resources supported by OpenStack sys-cluster/openstack-meta
app-admin/terraform:packet - Builds the provider that interacts with the resources supported by Packet https://www.packet.net
app-admin/terraform:postgresql - Builds the provider that gives the ability to deploy and configure resources in a PostgreSQL server.
app-admin/terraform:powerdns - Build the provider that manipulates DNS records supported by PowerDNS server http://powerdns.com
app-admin/terraform:remote-exec - Builds the provisioner that invokes a script on a remote resource after it is created
app-admin/terraform:rundeck - Builds the provider that creates and configures Projects, Jobs and Keys in Rundeck http://rundeck.org
app-admin/terraform:softlayer - Builds the provider that interacts with the resources supported by IBM's SoftLayer https://www.softlayer.com
app-admin/terraform:statuscake - Builds the provider that creates and configures tests in StatusCake https://www.statuscake.com
app-admin/terraform:template - Builds a provider that exposes resources to use templates to generate strings for other Terraform resources or outputs.
app-admin/terraform:tls - Builds the provider that provides utilities for working with Transport Layer Security keys and certificates
app-admin/terraform:vcd - Builds the provider that is used to interact with the resources supported by VMware vCloud Director http://www.vmware.com/products/vcloud-director/
app-admin/terraform:vsphere - Builds the provider that interacts with the resources supported by VMware vSphere http://www.vmware.com/products/vsphere
app-admin/terraform-provider-libvirt:libvirt - Builds the terraform provider for libvirt
dev-java/sbt:binary - Install from (Gentoo-compiled) binary instead of building from sources. Set this when you run out of memory during build.
dev-util/idea-ultimate:custom-jdk - Install and use IntelliJ's custom JRE.
dev-util/idea-ultimate:jbr11 - Install and use the Java 11 based version of JetBrains Runtime.
dev-util/idea-ultimate:jbr8 - Install and use the Java 8 based version of JetBrains Runtime.
dev-util/pycharm-community:jbr11 - Install and use the Java 11 based version of JetBrains Runtime.
dev-util/pycharm-professional:jbr11 - Install and use the Java 11 based version of JetBrains Runtime.
dev-util/rubymine:jbr11 - Install and use the Java 11 based version of JetBrains Runtime.
media-libs/openimageio:dicom - Enable DICOM medical image file support via sci-libs/dcmtk
media-libs/openimageio:field3d - Enable f3d file (write) support via media-libs/Field3D
media-libs/openimageio:opencv - Enable OpenCV support via media-libs/opencv
media-libs/openimageio:openvdb - Enable OpenVDB support via media-gfx/openvdb
media-libs/openimageio:ptex - Enable Ptex texture mapping system file support via media-libs/ptex
net-misc/megasync:cryptopp - Compile with Crypto++ Library.
net-misc/megasync:dolphin - Upload your files to your Mega account from Dolphin file manager.
net-misc/megasync:freeimage - Use freeimage to manage graphic images format.
net-misc/megasync:nautilus - Upload your files to your Mega account from nautilus.
net-misc/megasync:thunar - Upload your files to your Mega account from Thunar.
sci-mathematics/octave:glpk - Add support for sci-mathematics/glpk for linear programming
sci-mathematics/octave:qhull - Add support for media-libs/qhull, to allow `delaunay', `convhull', and related functions
sci-mathematics/octave:qrupdate - Add support for sci-libs/qrupdatefor QR and Cholesky update functions
sci-mathematics/octave:sparse - Add enhanced support for sparse matrix algebra with SuiteSparse
sci-mathematics/octave:sundials - Enable the ode15i and ode15s ODE solvers using sci-libs/sundials
sys-block/partclone:apfs - Compile partclone apfs tool
sys-block/partclone:btrfs - Compile partclone btrfs tool
sys-block/partclone:e2fs - Compile partclone e2fs tool
sys-block/partclone:exfat - Compile partclone exfat tool
sys-block/partclone:f2fs - Compile partclone f2fs tool
sys-block/partclone:fat - Compile partclone fat tool
sys-block/partclone:fuse - Compile partclone fuse tool
sys-block/partclone:hfs - Compile partclone hfs tool
sys-block/partclone:jfs - Compile partclone jfs tool
sys-block/partclone:minix - Compile partclone minix tool
sys-block/partclone:nilfs2 - Compile partclone nilfs2 tool
sys-block/partclone:ntfs - Compile partclone ntfs tool
sys-block/partclone:reiser4 - Compile partclone reiser4 tool
sys-block/partclone:reiserfs - Compile partclone reiserfs tool
sys-block/partclone:ufs - Compile partclone ufs tool
sys-block/partclone:vmfs - Compile partclone vmfs tool
sys-block/partclone:xfs - Compile partclone xfs tool
sys-fs/vmfs-tools:fuse - Enable image mount support via fuse
